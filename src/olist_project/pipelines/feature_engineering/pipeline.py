"""
This is a boilerplate pipeline 'feature_engineering'
generated using Kedro 0.19.10
"""

from kedro.pipeline import Pipeline, pipeline, node
from .nodes import (
    build_target,
    build_features_orders,
    build_features_items,
    build_features_reviews,
    build_features_payments,
    build_features_customers,
    build_features_geolocation,
    build_features_sellers,
    build_feature_table
)


def create_pipeline(**kwargs) -> Pipeline:
    pipe_template = pipeline([
        node(
            func=build_target,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_orders",
                "params:feature_engineering.orders.id_col",
                "params:feature_engineering.orders.cohort_info_col",
                "params:feature_engineering.performance_period",
            ],
            outputs="spine",
            name="build_target_node"
        ),
        node(
            func=build_features_orders,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_orders",
                "params:feature_engineering.orders.id_col",
                "params:feature_engineering.orders.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_orders",
            name="build_features_orders_node"
        ),
        node(
            func=build_features_items,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_order_items",
                "params:feature_engineering.items.id_col",
                "params:feature_engineering.items.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_items",
            name="build_features_items_node"
        ),
        node(
            func=build_features_reviews,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_order_reviews",
                "params:feature_engineering.reviews.id_col",
                "params:feature_engineering.reviews.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_reviews",
            name="build_features_reviews_node"
        ),
        node(
            func=build_features_payments,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_order_payments",
                "params:feature_engineering.payments.id_col",
                "params:feature_engineering.payments.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_payments",
            name="build_features_payments_node"
        ),
        node(
            func=build_features_customers,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_customers",
                "params:feature_engineering.customers.id_col",
                "params:feature_engineering.customers.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_customers",
            name="build_features_customers_node"
        ),
        node(
            func=build_features_geolocation,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_geolocation",
                "params:feature_engineering.geolocation.id_col",
                "params:feature_engineering.geolocation.cohort_info_col",
                "params:feature_engineering.time_windows",
            ],
            outputs="feature_geolocation",
            name="build_features_geolocation_node"
        ),
        node(
            func=build_features_sellers,
            inputs=[
                "audience",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
                "pre_sellers",
                "params:feature_engineering.sellers.id_col",
            ],
            outputs="feature_sellers",
            name="build_features_sellers_node"
        ),
        node(
            func=build_feature_table,
            inputs=[
                "audience",
                "feature_orders",
                "feature_items",
                "feature_reviews",
                "feature_payments",
                "feature_customers",
                "feature_geolocation",
                "feature_sellers",
                "params:audience_building.id_col",
                "params:audience_building.cohort_col",
            ],
            outputs="feature_table",
            name="build_feature_table_node"
        ),
    ])

    parameters = [
        "params:feature_engineering.orders.id_col",
        "params:feature_engineering.orders.cohort_info_col",
        "params:feature_engineering.items.id_col",
        "params:feature_engineering.items.cohort_info_col",
        "params:feature_engineering.reviews.id_col",
        "params:feature_engineering.reviews.cohort_info_col",
        "params:feature_engineering.payments.id_col",
        "params:feature_engineering.payments.cohort_info_col",
        "params:feature_engineering.customers.id_col",
        "params:feature_engineering.customers.cohort_info_col",
        "params:feature_engineering.geolocation.id_col",
        "params:feature_engineering.geolocation.cohort_info_col",
        "params:feature_engineering.sellers.id_col",
        "params:feature_engineering.time_windows",
        "params:feature_engineering.performance_period",
    ]
    pipe_modeling = pipeline(
        pipe=pipe_template,
        namespace="modeling",
        parameters=parameters,
        tags=["modeling-without-preprocess"]
    )

    pipe_scoring = pipeline(
        pipe=pipe_template,
        parameters=parameters,
        namespace="scoring",
        tags=["scoring-without-preprocess"]
    )

    return pipe_modeling + pipe_scoring
